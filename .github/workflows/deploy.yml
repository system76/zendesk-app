---

name: Deploy

on:
  push:
    branches:
      - master
      - staging

jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Lint
      - Build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS
        run: sudo apt install -y awscli

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Environment
        run: |
          if [ $GITHUB_REF == "refs/heads/master" ]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV

            echo "AWS_ACCESS_KEY_ID=${{ secrets.PRODUCTION_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.PRODUCTION_ACCESS_SECRET }}" >> $GITHUB_ENV
            echo "AWS_DEFAULT_REGION=${{ secrets.PRODUCTION_REGION }}" >> $GITHUB_ENV
            echo "AWS_BUCKET=${{ secrets.PRODUCTION_BUCKET }}" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV

            echo "AWS_ACCESS_KEY_ID=${{ secrets.STAGING_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_ACCESS_SECRET }}" >> $GITHUB_ENV
            echo "AWS_DEFAULT_REGION=${{ secrets.STAGING_REGION }}" >> $GITHUB_ENV
            echo "AWS_BUCKET=${{ secrets.STAGING_BUCKET }}" >> $GITHUB_ENV
          fi

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload
        run: |
          aws s3 cp \
            --acl public-read \
            --recursive \
            ./dist/ "s3://$AWS_BUCKET"
